import{a as lt,b as ct}from"../chunk-7OP6AIOR.mjs";import"../chunk-ANZKOZEE.mjs";import{a as ft,b as dt,c as Y,e as ut}from"../chunk-H4U4LEYC.mjs";import{a as x,b as et,g as at,h as st,i as G,j as Q}from"../chunk-IBNRZ227.mjs";import"../chunk-ZGEJ7KGT.mjs";import"../chunk-AWBGKN6N.mjs";import{a as H,b as R,c as Z,d as $}from"../chunk-K7C7TUE5.mjs";import{TypedEmitter as Pt}from"tiny-typed-emitter";import{TypedEmitter as kt}from"tiny-typed-emitter";import{createHash as St}from"crypto";import Et from"axios";var B,N,F,rt=class{constructor(a,r,i){Z(this,B,void 0);Z(this,N,void 0);Z(this,F,void 0);H(this,"ip");H(this,"zoneSyncStatus",0);H(this,"cache",new Map);i&&$(this,B,i),$(this,N,a),$(this,F,r)}syncData(){let a=[];R(this,N).entities.forEach(r=>{r.entityType===1&&a.push(r)}),this.getPlayersData(a)}getPlayersData(a,r=0){if(r>24){a.forEach(s=>{let e=this.cache.get(s.name);e&&e.status===1?e.status=0:e||this.cache.set(s.name,{hash:"",status:0,info:{name:s.name,stats:[],elixirs:[],gems:[]}})});return}if(!this.isCurrentZoneValid()){a.forEach(s=>{let e=this.cache.get(s.name);e&&e.status===1&&this.cache.delete(s.name)});return}if(!R(this,B)||!this.ip)return;let i={};a.forEach(s=>{let e=this.getHash(s),t=this.cache.get(s.name);if(!e){t&&t.status===1&&this.cache.delete(s.name);return}t&&(t.status===0||r===0&&t.status===1||t.status===2&&t.hash===e)||(t?(t.hash=e,t.status=1):t={hash:e,status:1,info:{name:s.name,stats:[],elixirs:[],gems:[]}},this.cache.set(s.name,t),i[s.name]=e)}),Object.keys(i).length!==0&&Et.get(`${rt.baseUrl}/req2`,{params:{ip:this.ip,ci:R(this,F),...i}}).then(s=>{if(s.status===200&&R(this,B))try{let e=s.data,t=dt.get(6e4);if(t){let[o,c,l]=t,y={players:e};if(a=a.filter(k=>!e.find(g=>g.name===k.name)),a.length>0&&setTimeout(()=>{a=a.map(k=>R(this,N).getEntityByName(k.name)).filter(k=>k!==void 0&&k.entityType===1),this.getPlayersData(a,r+1)},1e4),y.players.length>0){let k=new Y(y,6e4,l);R(this,B).emit(o,k),R(this,B).emit("*",o,k),R(this,B).appendLog(k)}}}catch{setTimeout(()=>{a=a.map(t=>R(this,N).getEntityByName(t.name)).filter(t=>t!==void 0&&t.entityType===1),this.getPlayersData(a,r+5)},1e4)}}).catch(s=>{setTimeout(()=>{a=a.map(e=>R(this,N).getEntityByName(e.name)).filter(e=>e!==void 0&&e.entityType===1),this.getPlayersData(a,r+5)},1e4)})}getHash(a){if(!a.items.equipList||a.characterId===0n||!a.class||a.name==="You")return;let r=new Array(32).fill(0);a.items.equipList?.forEach(s=>{r[s.slot]=s.id});let i=`${a.name}${a.class}${a.characterId}${r.join("")}`;return St("md5").update(i).digest("hex")}updatePlayerStats(a){a.forEach(r=>{let i=this.cache.get(r.name);i?(i.info=r,i.status=2):this.cache.set(r.name,{hash:"",status:2,info:r})})}getStats(a){if(!this.isCurrentZoneValid())return;let r=this.cache.get(a);if(r&&r.status===2)return r.info.stats}isCurrentZoneValid(){return this.zoneSyncStatus!==0&&(this.zoneSyncStatus&10)===0}},V=rt;B=new WeakMap,N=new WeakMap,F=new WeakMap,H(V,"baseUrl","https://la.herysia.com");var Dt={isLive:!0,dontResetOnZoneChange:!1,resetAfterPhaseTransition:!1,splitOnPhaseTransition:!1},J=class extends kt{#t;encounters;#i;#o;#r;#a;options;resetTimer;phaseTransitionResetRequest;phaseTransitionResetRequestTime;#e;constructor(a,r,i,s,e){super(),this.#i=a,this.#o=r,this.#r=i,this.#a=s,this.options={...Dt,...e},this.resetTimer=null,this.phaseTransitionResetRequest=!1,this.phaseTransitionResetRequestTime=0,this.#e=new Map,this.encounters=[],this.#t={startedOn:0,lastCombatPacket:0,fightStartedOn:0,localPlayer:this.#i.localPlayer.name,currentBoss:void 0,killState:0,zoneLevel:Q[0],entities:new Map,damageStatistics:{totalDamageDealt:0,topDamageDealt:0,totalDamageTaken:0,topDamageTaken:0,totalHealingDone:0,topHealingDone:0,totalShieldDone:0,topShieldDone:0,debuffs:new Map,buffs:new Map,topShieldGotten:0,totalEffectiveShieldingDone:0,topEffectiveShieldingDone:0,topEffectiveShieldingUsed:0,effectiveShieldingBuffs:new Map,appliedShieldingBuffs:new Map}}}onCounterAttack(a,r){let i=this.updateEntity(a,{},r);i.hits.counter+=1}onInitEnv(a,r){this.options.isLive?(this.#t.entities.forEach((i,s,e)=>{i.hits.total===0&&e.delete(s)}),this.options.dontResetOnZoneChange===!1&&this.resetTimer===null&&(this.resetTimer=setTimeout(()=>{this.resetState(+r+6e3)},6e3),this.emit("message","new-zone"))):(this.splitEncounter(r),this.emit("message","new-zone"))}splitEncounter(a){if(this.#t.fightStartedOn!==0&&(this.#t.damageStatistics.totalDamageDealt!==0||this.#t.damageStatistics.totalDamageTaken!==0)){let r=structuredClone(this.#t);r.entities.forEach(i=>{i.isPlayer&&(i.statApiValid=this.#r.isCurrentZoneValid()&&this.#r.cache.get(i.name)?.status===2)}),r.localPlayer=this.#i.localPlayer.name,this.applyBreakdowns(r.entities),this.encounters.push(r)}this.resetState(+a)}getBossIfStillExist(){if(this.#t.currentBoss?.id){let a=BigInt(`0x0${this.#t.currentBoss?.id}`);return this.#i.entities.has(a)?this.#t.currentBoss:void 0}}resetState(a){this.cancelReset(),this.resetBreakdowns(),this.#t={startedOn:+a,lastCombatPacket:+a,fightStartedOn:0,localPlayer:this.#i.localPlayer.name,currentBoss:this.getBossIfStillExist(),entities:new Map,killState:0,zoneLevel:this.#t.zoneLevel,damageStatistics:{totalDamageDealt:0,topDamageDealt:0,totalDamageTaken:0,topDamageTaken:0,totalHealingDone:0,topHealingDone:0,totalShieldDone:0,topShieldDone:0,debuffs:new Map,buffs:new Map,appliedShieldingBuffs:new Map,effectiveShieldingBuffs:new Map,topEffectiveShieldingDone:0,topEffectiveShieldingUsed:0,topShieldGotten:0,totalEffectiveShieldingDone:0}},this.emit("reset-state",this.#t)}cancelReset(){this.resetTimer&&clearTimeout(this.resetTimer),this.resetTimer=null}onPhaseTransition(a,r){this.options.isLive&&(this.emit("message",`phase-transition-${a}`),this.options.resetAfterPhaseTransition&&(this.phaseTransitionResetRequest=!0,this.phaseTransitionResetRequestTime=+r)),!this.options.isLive&&this.options.splitOnPhaseTransition&&this.splitEncounter(r)}updateOptions(a){this.options={...this.options,...a}}onDeath(a,r){let i=this.#t.entities.get(a.name),s=0;i?i.isDead?s=i.deaths:s=i.deaths+1:s=1,this.updateEntity(a,{isDead:!0,deathTime:+r,deaths:s},r)}onDamage(a,r,i,s,e,t){if((s.modifier&15)===11&&s.skillId===0&&s.skillEffectId===0)return;this.phaseTransitionResetRequest&&this.phaseTransitionResetRequestTime>0&&this.phaseTransitionResetRequestTime<+t-8e3&&(this.resetState(+t),this.phaseTransitionResetRequest=!1);let[o,c]=this.#o.getStatusEffects(a,i,this.#i.localPlayer.characterId,t);if(this.#a.isBattleItem(s.skillEffectId,"attack")&&r&&r.entityType===5){let P=r;s.skillEffectId=P.skillEffectId}let l=this.updateEntity(a,{},t),y=this.updateEntity(i,{currentHp:s.targetCurHp,maxHp:s.targetMaxHp},t);if(!l||!y)return;!y.isPlayer&&s.targetCurHp<0&&(s.damage=s.damage+s.targetCurHp);let k=s.skillId;s.skillId===0&&s.skillEffectId!==0&&(k=s.skillEffectId);let g=l.skills.get(k);g||(g={...this.createEntitySkill(),id:k,...this.getSkillNameIcon(s.skillId,s.skillEffectId)},l.skills.set(k,g));let q=s.modifier&15,w=(s.modifier>>4&7)-1,_=(q&9)!==0,C=new Set,b=new Set;o.forEach(([P])=>{C.add(P)}),c.forEach(([P])=>{b.add(P)}),g.damageInfo.damageDealt+=s.damage,s.damage>g.maxDamage&&(g.maxDamage=s.damage),l.hits.total+=1,g.hits.total+=1,l.damageInfo.damageDealt+=s.damage,y.damageTaken+=s.damage;let z=_?1:0;l.hits.crit+=z,g.hits.crit+=z;let U=!1,K=!1,W=this.#a.getSkillEffectDirectionalMask(s.skillEffectId)-1;if(W===0||W===2){K=w===0;let P=K?1:0;l.hits.backAttack+=P,l.hits.totalBackAttack+=1,g.hits.backAttack+=P,g.hits.totalBackAttack+=1}if(W===1||W===2){U=w===1;let P=U?1:0;l.hits.frontAttack+=P,l.hits.totalFrontAttack+=1,g.hits.frontAttack+=P,g.hits.totalFrontAttack+=1}if(l.isPlayer){this.#t.damageStatistics.totalDamageDealt+=s.damage,this.#t.damageStatistics.topDamageDealt=Math.max(this.#t.damageStatistics.topDamageDealt,l.damageInfo.damageDealt);let P=!1,L=!1;C.forEach(n=>{if(!this.#t.damageStatistics.buffs.has(n)){let S=this.#a.getStatusEffectHeaderData(n);S&&this.#t.damageStatistics.buffs.set(n,S)}let D=this.#t.damageStatistics.buffs.get(n);D&&!P&&(P=(D.buffcategory==="classskill"||D.buffcategory==="identity"||D.buffcategory==="ability")&&D.source.skill!==void 0&&D.target===1&&this.#a.isSupportClassId(D.source.skill.classid));let T=g.damageDealtBuffedBy.get(n)??0;g.damageDealtBuffedBy.set(n,T+s.damage);let M=l.damageDealtBuffedBy.get(n)??0;l.damageDealtBuffedBy.set(n,M+s.damage);let j=l.hits.hitsBuffedBy.get(n)??0;l.hits.hitsBuffedBy.set(n,j+1);let E=g.hits.hitsBuffedBy.get(n)??0;g.hits.hitsBuffedBy.set(n,E+1)}),b.forEach(n=>{if(!this.#t.damageStatistics.debuffs.has(n)){let S=this.#a.getStatusEffectHeaderData(n);S&&this.#t.damageStatistics.debuffs.set(n,S)}let D=this.#t.damageStatistics.debuffs.get(n);D&&!L&&(L=(D.buffcategory==="classskill"||D.buffcategory==="identity"||D.buffcategory==="ability")&&D.source.skill!==void 0&&D.target===1&&this.#a.isSupportClassId(D.source.skill.classid));let T=g.damageDealtDebuffedBy.get(n)??0;g.damageDealtDebuffedBy.set(n,T+s.damage);let M=l.damageDealtDebuffedBy.get(n)??0;l.damageDealtDebuffedBy.set(n,M+s.damage);let j=l.hits.hitsDebuffedBy.get(n)??0;l.hits.hitsDebuffedBy.set(n,j+1);let E=g.hits.hitsDebuffedBy.get(n)??0;g.hits.hitsDebuffedBy.set(n,E+1)});let nt=L?1:0,ot=P?1:0;if(g.damageInfo.damageDealtBuffedBySupport+=P?s.damage:0,g.damageInfo.damageDealtDebuffedBySupport+=L?s.damage:0,l.damageInfo.damageDealtBuffedBySupport+=P?s.damage:0,l.damageInfo.damageDealtDebuffedBySupport+=L?s.damage:0,l.hits.hitsBuffedBySupport+=ot,l.hits.hitsDebuffedBySupport+=nt,g.hits.hitsBuffedBySupport+=ot,g.hits.hitsDebuffedBySupport+=nt,s.damage>0&&l.isPlayer){let n={multDmg:{sumRate:0,totalRate:1,values:Array()},atkPowSubRate2:{selfSumRate:0,sumRate:0,values:Array()},atkPowSubRate1:{sumRate:0,totalRate:1,values:Array()},skillDamRate:{selfSumRate:0,sumRate:0,values:Array()},atkPowAmplify:{values:Array()},crit:{selfSumRate:0,sumRate:0,values:Array()},critDmgRate:2};if(o.forEach(([E,S,I])=>{let m=this.#i.entities.get(S);if(!m)return;let f=this.getBuffAfterTripods(this.#a.skillBuff.get(E),m,s);if(f){if(f.type==="skill_damage_amplify"&&f.statuseffectvalues&&m.entityType===1&&S!==a.entityId){let u=f.statuseffectvalues[0]??0,d=f.statuseffectvalues[4]??0;if((u===0||u===s.skillId)&&(d===0||d===s.skillEffectId)){let h=f.statuseffectvalues[1]??0;if(h!==0){let p=h/1e4*I;n.multDmg.values.push({casterEntity:m,rate:p}),n.multDmg.sumRate+=p,n.multDmg.totalRate*=1+p}}}else if(f.type==="attack_power_amplify"&&f.statuseffectvalues&&m.entityType===1&&S!==a.entityId){let u=f.statuseffectvalues[0]??0;if(u!==0){let d=u/1e4*I,h=this.#r.getStats(m.name)?.find(v=>v.id===4)?.value,p=this.#r.getStats(a.name)?.find(v=>v.id===4)?.value;h&&p&&(d*=h/p),n.atkPowAmplify.values.push({casterEntity:m,rate:d})}}f.passiveoption.forEach(u=>{if(x[u.type]===2){if(u.keystat==="attack_power_sub_rate_2"){let d=u.value;if(d!==0){let h=d/1e4*I;m.entityType===1&&S!==a.entityId?(n.atkPowSubRate2.values.push({casterEntity:m,rate:h}),n.atkPowSubRate2.sumRate+=h):n.atkPowSubRate2.selfSumRate+=h}}else if(u.keystat==="attack_power_sub_rate_1"){let d=u.value;if(d!==0){let h=d/1e4*I;m.entityType===1&&S!==a.entityId&&(n.atkPowSubRate1.values.push({casterEntity:m,rate:h}),n.atkPowSubRate1.sumRate+=h,n.atkPowSubRate1.totalRate*=1+h)}}else if(u.keystat==="skill_damage_rate"){let d=u.value;if(d!==0){let h=d/1e4*I;m.entityType===1&&S!==a.entityId?(n.skillDamRate.values.push({casterEntity:m,rate:h}),n.skillDamRate.sumRate+=h):n.skillDamRate.selfSumRate+=h}}}if(u.keystat==="critical_hit_rate"){let d=u.value;if(d!==0){let h=d/1e4*I;m.entityType===1&&S!==a.entityId?(n.crit.values.push({casterEntity:m,rate:h}),n.crit.sumRate+=h):n.crit.selfSumRate+=h}}if(m.entityType===1&&S!==a.entityId)if(u.keystat==="skill_damage_sub_rate_2"){let d=u.value;if(d!==0){let h=d/1e4*I,p=this.#r.getStats(m.name)?.find(v=>v.id===1)?.value??0;switch(m.class){case 204:h*=1+p/.0699*.35/1e4;break;case 105:h*=1+p/.0699*.63/1e4;break;case 602:h*=1+p/.0699*.38/1e4;break;default:break}n.multDmg.values.push({casterEntity:m,rate:h}),n.multDmg.sumRate+=h,n.multDmg.totalRate*=1+h}}else u.keystat==="critical_dam_rate"&&f.category==="buff"&&(n.critDmgRate+=u.value/1e4*I);else if(x[u.type]===4){let d=this.#a.combatEffect.get(u.keyindex);n.critDmgRate+=I*this.getCritMultiplierFromCombatEffect(d,{self:a,target:i,caster:m,skill:this.#a.skill.get(k),hitOption:w,targetCount:e})}})}}),c.forEach(([E,S,I])=>{let m=this.#i.entities.get(S);if(!m)return;let f=this.getBuffAfterTripods(this.#a.skillBuff.get(E),m,s);if(f){if(f.type==="instant_stat_amplify"&&f.statuseffectvalues){let u=f.statuseffectvalues[0]??0;if(u!==0){let d=u/1e4*I;m.entityType===1&&S!==a.entityId?(n.crit.values.push({casterEntity:m,rate:d}),n.crit.sumRate+=d):n.crit.selfSumRate+=d}}if(!(m.entityType!==1||S===a.entityId)){if(f.type==="instant_stat_amplify"&&f.statuseffectvalues){let u=f.statuseffectvalues[0]??0;if(s.damageType===0){let d=f.statuseffectvalues[2]??0;if(d!==0){let p=-(d/1e4)*I*.5;n.multDmg.values.push({casterEntity:m,rate:p}),n.multDmg.sumRate+=p,n.multDmg.totalRate*=1+p}let h=f.statuseffectvalues[7]??0;if(h!==0){let p=h/1e4*I;n.multDmg.values.push({casterEntity:m,rate:p}),n.multDmg.sumRate+=p,n.multDmg.totalRate*=1+p}if(_){let p=f.statuseffectvalues[9]??0;if(p!==0){let v=p/1e4*I;n.multDmg.values.push({casterEntity:m,rate:v}),n.multDmg.sumRate+=v,n.multDmg.totalRate*=1+v}}}else if(s.damageType===1){let d=f.statuseffectvalues[3]??0;if(d!==0){let p=-(d/1e4)*I*.5;n.multDmg.values.push({casterEntity:m,rate:p}),n.multDmg.sumRate+=p,n.multDmg.totalRate*=1+p}let h=f.statuseffectvalues[8]??0;if(h!==0){let p=h/1e4*I;n.multDmg.values.push({casterEntity:m,rate:p}),n.multDmg.sumRate+=p,n.multDmg.totalRate*=1+p}if(_){let p=f.statuseffectvalues[10]??0;if(p!==0){let v=p/1e4*I;n.multDmg.values.push({casterEntity:m,rate:v}),n.multDmg.sumRate+=v,n.multDmg.totalRate*=1+v}}}}if(f.type==="skill_damage_amplify"&&f.statuseffectvalues){let u=f.statuseffectvalues[0]??0,d=f.statuseffectvalues[4]??0;if((u===0||u===s.skillId)&&(d===0||d===s.skillEffectId)){let h=f.statuseffectvalues[1]??0;if(h!==0){let p=h/1e4*I;n.multDmg.values.push({casterEntity:m,rate:p}),n.multDmg.sumRate+=p,n.multDmg.totalRate*=1+p}}}if(f.type==="directional_attack_amplify"&&f.statuseffectvalues){if(U){let u=f.statuseffectvalues[0]??0;if(u!==0){let d=u/100*I;n.multDmg.values.push({casterEntity:m,rate:d}),n.multDmg.sumRate+=d,n.multDmg.totalRate*=1+d}}if(K){let u=f.statuseffectvalues[4]??0;if(u!==0){let d=u/100*I;n.multDmg.values.push({casterEntity:m,rate:d}),n.multDmg.sumRate+=d,n.multDmg.totalRate*=1+d}}}}}}),n.crit.values.length>0){let E=this.#a.skill.get(s.skillId);a.itemSet?.forEach(S=>{if(x[S.type]===2&&G[S.keystat]===76)n.critDmgRate+=S.value/1e4;else if(x[S.type]===4){let I=this.#a.combatEffect.get(S.keyindex);n.critDmgRate+=this.getCritMultiplierFromCombatEffect(I,{self:a,target:i,caster:a,skill:E,hitOption:w,targetCount:e})}a.skills.get(s.skillId)?.tripods.forEach(I=>{let m=new Map;I.options.forEach(f=>{let u=st[f.type];if(u===45){if((f.params[0]??0)===0||s.skillEffectId===(f.params[0]??0)){let d=f.params[1];if(d){let h=this.#a.combatEffect.get(d);h&&m.set(h.id,h)}}}else if(u===46)m.delete(f.params[0]??0);else if(u===104){if((f.params[0]??0)===0||s.skillEffectId===(f.params[0]??0)){let d=m.get(f.params[1]??0);if(d){let h=structuredClone(d);m.set(d.id,h),h.effects.forEach(p=>{p.actions.forEach(v=>{for(let O=0;O<f.params.length-2;O++)at[f.paramtype]===1?v.args[O]*=1+(f.params[O+2]??0)/100:v.args[O]+=f.params[O+2]??0})})}}}else u===29?((f.params[0]??0)===0||s.skillEffectId===(f.params[0]??0))&&(n.critDmgRate+=(f.params[1]??0)/1e4):u===30&&((f.params[0]??0)===0||s.skillEffectId===(f.params[0]??0))&&(n.crit.selfSumRate+=(f.params[1]??0)/1e4)}),m.forEach(f=>{n.critDmgRate+=this.getCritMultiplierFromCombatEffect(f,{self:a,target:i,caster:a,skill:E,hitOption:w,targetCount:e})})})})}if(n.skillDamRate.values.length>0){let E=this.#r.getStats(a.name)?.find(S=>S.id===5)?.value;E&&(n.skillDamRate.selfSumRate+=E/1e4)}let D=0;if(n.crit.values.length>0){n.crit.selfSumRate+=(this.#r.getStats(a.name)?.find(S=>S.id===0)?.value??0)/.2794/1e4;let E=Math.min(Math.max(0,1-n.crit.selfSumRate),n.crit.sumRate);D=(E*n.critDmgRate-E)/(n.crit.selfSumRate*n.critDmgRate-n.crit.selfSumRate+1)}let T=n.atkPowAmplify.values.length<=0?{rate:0}:n.atkPowAmplify.values.reduce((E,S)=>E.rate>S.rate?E:S),M=(1+D)*(1+n.atkPowSubRate2.sumRate/(1+n.atkPowSubRate2.selfSumRate))*(1+n.skillDamRate.sumRate/(1+n.skillDamRate.selfSumRate))*(1+T.rate)*n.multDmg.totalRate*n.atkPowSubRate1.totalRate-1,j=D+n.atkPowSubRate2.sumRate/(1+n.atkPowSubRate2.selfSumRate)+n.skillDamRate.sumRate/(1+n.skillDamRate.selfSumRate)+T.rate+(n.multDmg.totalRate-1)+(n.atkPowSubRate1.totalRate-1);{let E=M*s.damage/(j*(1+M)),S=D*E/n.crit.sumRate;n.crit.values.forEach(f=>{let u=f.rate*S,d=this.#t.entities.get(f.casterEntity.name);this.applyRdps(l,d,g,u)}),n.atkPowSubRate2.values.forEach(f=>{let u=f.rate/(1+n.atkPowSubRate2.selfSumRate)*E,d=this.#t.entities.get(f.casterEntity.name);this.applyRdps(l,d,g,u)}),n.skillDamRate.values.forEach(f=>{let u=f.rate/(1+n.skillDamRate.selfSumRate)*E,d=this.#t.entities.get(f.casterEntity.name);this.applyRdps(l,d,g,u)});let I=(n.multDmg.totalRate-1)*E/n.multDmg.sumRate;n.multDmg.values.forEach(f=>{let u=f.rate*I,d=this.#t.entities.get(f.casterEntity.name);this.applyRdps(l,d,g,u)});let m=(n.atkPowSubRate1.totalRate-1)*E/n.atkPowSubRate1.sumRate;if(n.atkPowSubRate1.values.forEach(f=>{let u=f.rate*m,d=this.#t.entities.get(f.casterEntity.name);this.applyRdps(l,d,g,u)}),T.rate>0){let f=T.rate*E,u=this.#t.entities.get(T.casterEntity?.name);this.applyRdps(l,u,g,f)}}}let pt={timestamp:+t,damage:s.damage,targetEntity:y.id,isCrit:_,isBackAttack:K,isFrontAttack:U,isBuffedBySupport:P,isDebuffedBySupport:L,buffedBy:[...C],debuffedBy:[...b]},gt=BigInt("0x"+l.id);this.addBreakdown(gt,k,pt)}y.isPlayer&&(this.#t.damageStatistics.totalDamageTaken+=s.damage,this.#t.damageStatistics.topDamageTaken=Math.max(this.#t.damageStatistics.topDamageTaken,y.damageTaken)),y.isBoss&&(this.#t.currentBoss=y),this.#t.fightStartedOn===0&&(this.#t.fightStartedOn=+t),this.#t.lastCombatPacket=+t}getBuffAfterTripods(a,r,i){if(!a||r.entityType!==1)return a;let s=structuredClone(a);return r.skills.get(i.skillId)?.tripods.forEach(e=>{e.options.forEach(t=>{let o=st[t.type];if(o===19){if(((t.params[0]??0)===0||i.skillEffectId===(t.params[0]??0))&&s.id===(t.params[1]??0)){let c=new Map;for(let l=2;l<t.params.length;l+=2)t.params[l]&&t.params[l+1]&&c.set(t.params[l]??0,t.params[l+1]??0);s.passiveoption.forEach(l=>{let y=c.get(G[l.keystat]);x[l.type]===2&&y&&(at[t.paramtype]===0?l.value+=y:l.value*=1+y/100)})}}else if(o===42){if(((t.params[0]??0)===0||i.skillEffectId===(t.params[0]??0))&&s.id===(t.params[1]??0)){let c=G[t.params[2]??0],l=t.params[3]??0;c&&l!==void 0&&s.passiveoption.push({type:"stat",keystat:c,keyindex:0,value:l})}}else if(o===21&&s.statuseffectvalues&&((t.params[0]??0)===0||i.skillEffectId===(t.params[0]??0))&&s.id===(t.params[1]??0))if((t.params[2]??0)===0)s.statuseffectvalues=t.params.slice(3);else{let c=[];for(let l=0;l<Math.max(s.statuseffectvalues.length,t.params.length-3);l++)t.params[l+3]&&c.push((s.statuseffectvalues[l]??0)*(1+(t.params[l+3]??0)/100));s.statuseffectvalues=c}})}),s}getCritMultiplierFromCombatEffect(a,r){if(!a)return 0;let i=0;return a.effects.filter(s=>s.actions.find(e=>et[e.type]===4)).forEach(s=>{this.#a.isCombatEffectConditionsValid({effect:s,...r})&&s.actions.filter(e=>et[e.type]===4).forEach(e=>{i+=(e.args[0]??0)/100})}),i}applyRdps(a,r,i,s){r&&(r.damageInfo.rdpsDamageGiven+=s),r&&this.#a.isSupportClassId(r.classId)&&(a.damageInfo.rdpsDamageReceivedSupp+=s,i.damageInfo.rdpsDamageReceivedSupp+=s),a.damageInfo.rdpsDamageReceived+=s,i.damageInfo.rdpsDamageReceived+=s}onStartSkill(a,r,i){let s=this.updateEntity(a,{isDead:!1},i);if(s){s.hits.casts+=1;let e=s.skills.get(r);e||(e={...this.createEntitySkill(),id:r,...this.getSkillNameIcon(r,0)},s.skills.set(r,e)),e.hits.casts+=1}}onShieldUsed(a,r,i,s){if(s<0&&console.error("Shield change values was negative, shield ammount increased"),a.entityType===1&&r.entityType===1){if(!this.#t.damageStatistics.effectiveShieldingBuffs.has(i)){let y=this.#a.getStatusEffectHeaderData(i);y&&this.#t.damageStatistics.effectiveShieldingBuffs.set(i,y)}let e=new Date,t=this.updateEntity(a,{},e),o=this.updateEntity(r,{},e);t.damagePreventedByShield+=s;let c=t.damagePreventedByShieldBy.get(i)??0;t.damagePreventedByShieldBy.set(i,c+s),this.#t.damageStatistics.topEffectiveShieldingUsed=Math.max(t.damagePreventedByShield,this.#t.damageStatistics.topEffectiveShieldingUsed),o.damagePreventedWithShieldOnOthers+=s;let l=o.damagePreventedWithShieldOnOthersBy.get(i)??0;o.damagePreventedWithShieldOnOthersBy.set(i,l+s),this.#t.damageStatistics.topEffectiveShieldingDone=Math.max(o.damagePreventedWithShieldOnOthers,this.#t.damageStatistics.topEffectiveShieldingDone),this.#t.damageStatistics.totalEffectiveShieldingDone+=s}}onShieldApplied(a,r,i,s){let e=new Date,t=this.updateEntity(a,{},e),o=this.updateEntity(r,{},e);if(o.isPlayer&&t.isPlayer){if(!this.#t.damageStatistics.appliedShieldingBuffs.has(i)){let y=this.#a.getStatusEffectHeaderData(i);y&&this.#t.damageStatistics.appliedShieldingBuffs.set(i,y)}t.shieldReceived+=s,o.shieldDone+=s;let c=o.shieldDoneBy.get(i)??0;o.shieldDoneBy.set(i,c+s);let l=t.shieldReceivedBy.get(i)??0;t.shieldReceivedBy.set(i,l+s),this.#t.damageStatistics.topShieldDone=Math.max(o.shieldDone,this.#t.damageStatistics.topShieldDone),this.#t.damageStatistics.topShieldGotten=Math.max(t.shieldReceived,this.#t.damageStatistics.topShieldGotten),this.#t.damageStatistics.totalShieldDone+=s}}getSkillNameIcon(a,r){if(a===0&&r===0)return{name:"Bleed",icon:"buff_168.png"};if(a===0){let i=this.#a.skillEffect.get(r);if(i&&i.itemname)return{name:i.itemname,icon:i.icon??""};if(i){if(i.sourceskill){let s=this.#a.skill.get(i.sourceskill);if(s)return{name:s.name,icon:s.icon}}else{let s=this.#a.skill.get(Math.floor(r/10));if(s)return{name:s.name,icon:s.icon}}return{name:i.comment}}else return{name:this.#a.getSkillName(a)}}else{let i=this.#a.skill.get(a);return!i&&(i=this.#a.skill.get(a-a%10),!i)?{name:this.#a.getSkillName(a),icon:""}:i.summonsourceskill?(i=this.#a.skill.get(i.summonsourceskill),i?{name:i.name+" (Summon)",icon:i.icon}:{name:this.#a.getSkillName(a),icon:""}):i.sourceskill?(i=this.#a.skill.get(i.sourceskill),i?{name:i.name,icon:i.icon}:{name:this.#a.getSkillName(a),icon:""}):{name:i.name,icon:i.icon}}}updateEntity(a,r,i){let s={lastUpdate:+i},e=this.#t.entities.get(a.name),t={};if(!e||a.entityType===1&&e.isPlayer!==!0){if(a.entityType===1){let o=a;t={classId:o.class,gearScore:o.gearLevel,isPlayer:!0}}else if(a.entityType===2||a.entityType===3){let o=a;t={npcId:o.typeId,isBoss:o.isBoss}}else if(a.entityType===4){let o=a;t={npcId:o.typeId,isBoss:o.isBoss,isEsther:!0,icon:o.icon}}}return e?Object.assign(e,r,s,t):(e={...this.createEntity(),...r,...s,...t,name:a.name,id:a.entityId.toString(16)},this.#t.entities.set(a.name,e)),e}updateOrCreateEntity(a,r,i){if(!(!r.name||!r.id)){for(let[s,e]of this.#t.entities)if(r.id===e.id){this.#t.entities.delete(s),this.updateEntity(a,{...e,...r},i);return}this.updateEntity(a,r,i)}}createEntitySkill(){return{id:0,name:"",icon:"",damageInfo:{damageDealt:0,rdpsDamageReceived:0,rdpsDamageReceivedSupp:0,rdpsDamageGiven:0,damageDealtDebuffedBySupport:0,damageDealtBuffedBySupport:0},maxDamage:0,hits:{casts:0,total:0,crit:0,backAttack:0,totalBackAttack:0,frontAttack:0,totalFrontAttack:0,counter:0,hitsDebuffedBySupport:0,hitsBuffedBySupport:0,hitsBuffedBy:new Map,hitsDebuffedBy:new Map},breakdown:[],damageDealtDebuffedBy:new Map,damageDealtBuffedBy:new Map}}createEntity(){return{lastUpdate:0,id:"",npcId:0,name:"",classId:0,isBoss:!1,isPlayer:!1,isDead:!1,deaths:0,deathTime:0,gearScore:0,currentHp:0,maxHp:0,damageInfo:{damageDealt:0,rdpsDamageReceived:0,rdpsDamageReceivedSupp:0,rdpsDamageGiven:0,damageDealtDebuffedBySupport:0,damageDealtBuffedBySupport:0},healingDone:0,shieldDone:0,damageTaken:0,skills:new Map,hits:{casts:0,total:0,crit:0,backAttack:0,totalBackAttack:0,frontAttack:0,totalFrontAttack:0,counter:0,hitsDebuffedBySupport:0,hitsBuffedBySupport:0,hitsBuffedBy:new Map,hitsDebuffedBy:new Map},damageDealtDebuffedBy:new Map,damageDealtBuffedBy:new Map,damagePreventedByShieldBy:new Map,damagePreventedWithShieldOnOthersBy:new Map,shieldDoneBy:new Map,shieldReceivedBy:new Map,damagePreventedWithShieldOnOthers:0,damagePreventedByShield:0,shieldReceived:0,statApiValid:!1}}getBroadcast(){let a={...this.#t};return a.entities=new Map,this.#t.entities.forEach((r,i)=>{!r.isPlayer&&!r.isEsther||(r.statApiValid=this.#r.isCurrentZoneValid()&&this.#r.cache.get(r.name)?.status===2,a.entities.set(i,{...r}))}),a.localPlayer=this.#i.localPlayer.name,a}resetBreakdowns(){this.#e.clear()}createBreakdownEntity(a){return this.#e.has(a)||this.#e.set(a,new Map),this.#e.get(a)}removeBreakdownEntry(a){this.#e.delete(a)}addBreakdown(a,r,i){let s=this.createBreakdownEntity(a);if(s.has(r))s.get(r).push(i);else{let e=new Array(i);s.set(r,e)}}getBreakdowns(a,r){let i=this.#e.get(a);if(i)return i.get(r)}clearBreakdowns(a,r){let i=this.#e.get(a);i&&i.delete(r)}applyBreakdowns(a,r=!0){a.forEach(i=>{i.skills.forEach(s=>{let e=BigInt("0x"+i.id),t=this.getBreakdowns(e,s.id);t&&(s.breakdown=[...t])})}),r&&this.resetBreakdowns()}setKillState(a){this.#t.killState=a}setZoneLevel(a){this.#t.zoneLevel=Q[a]}};var X=class{characterIdToPartyId;entityIdToPartyId;raidInstanceToPartyInstances;ownName;characterNameToCharacterId;#t;constructor(a){this.characterIdToPartyId=new Map,this.entityIdToPartyId=new Map,this.raidInstanceToPartyInstances=new Map,this.characterNameToCharacterId=new Map,this.#t=a}add(a,r,i=void 0,s=void 0,e=void 0){!i&&!s||(i&&!s&&(s=this.#t.getEntityId(i)),s&&!i&&(i=this.#t.getEntityId(s)),i&&this.characterIdToPartyId.set(i,r),s&&this.entityIdToPartyId.set(s,r),e&&i&&this.characterNameToCharacterId.set(e,i),this.registerPartyId(a,r))}completeEntry(a,r){let i=this.getPartyIdFromCharacterId(a),s=this.getPartyIdFromEntityId(r);i&&s||(!i&&s&&this.characterIdToPartyId.set(a,s),!s&&i&&this.entityIdToPartyId.set(r,i))}changeEntityId(a,r){let i=this.getPartyIdFromEntityId(a);i&&(this.entityIdToPartyId.delete(a),this.entityIdToPartyId.set(r,i))}setOwnName(a){this.ownName=a}remove(a,r){if(r===this.ownName){this.removePartyMappings(a);return}let i=this.characterNameToCharacterId.get(r);if(this.characterNameToCharacterId.delete(r),!i)return;this.characterIdToPartyId.delete(i);let s=this.#t.getEntityId(i);s&&this.characterIdToPartyId.delete(s)}isCharacterInParty(a){return this.characterIdToPartyId.has(a)}isEntityInParty(a){return this.entityIdToPartyId.has(a)}getPartyIdFromCharacterId(a){return this.characterIdToPartyId.get(a)}getPartyIdFromEntityId(a){return this.entityIdToPartyId.get(a)}removePartyMappings(a){let r=this.getRaidInstanceId(a),i=r?this.raidInstanceToPartyInstances.get(r)??new Set([a]):new Set([a]);for(let[s,e]of this.characterIdToPartyId)if(i.has(e)){this.characterIdToPartyId.delete(s);for(let[t,o]of this.characterNameToCharacterId)if(s===o){this.characterNameToCharacterId.delete(t);break}}for(let[s,e]of this.entityIdToPartyId)i.has(e)&&this.entityIdToPartyId.delete(s)}getRaidInstanceId(a){for(let r of this.raidInstanceToPartyInstances)if(r[1].has(a))return r[0]}registerPartyId(a,r){let i=this.raidInstanceToPartyInstances.get(a);i||(i=new Set,this.raidInstanceToPartyInstances.set(a,i)),i.add(r)}partyInfo(a,r,i){let s=a.parsed;if(s){if(s.memberDatas.length===1&&s.memberDatas[0]?.name===i.name){this.remove(s.partyInstanceId,s.memberDatas[0].name);return}this.removePartyMappings(s.partyInstanceId);for(let e of s.memberDatas){e.characterId===i.characterId&&this.setOwnName(e.name);let t=this.#t.getEntityId(e.characterId);if(t){let o=r.get(t);if(o&&o.entityType===1&&o.name!==e.name){let c=o;c.gearLevel=e.gearLevel,c.name=e.name,c.class=e.classId}}this.add(s.raidInstanceId,s.partyInstanceId,e.characterId,t,e.name)}}}};var tt=class{entityToCharacterId;characterToEntityId;constructor(){this.entityToCharacterId=new Map,this.characterToEntityId=new Map}addMapping(a,r){this.entityToCharacterId.set(r,a),this.characterToEntityId.set(a,r)}getCharacterId(a){return this.entityToCharacterId.get(a)}getEntityId(a){return this.characterToEntityId.get(a)}clear(){this.entityToCharacterId.clear(),this.characterToEntityId.clear()}};var ht=class extends Pt{#t;#i;#o;#r;#a;#e;#s;#n;#l;#c;constructor(a,r,i,s){super(),this.#t=a,this.#i=r,this.#o=new tt,this.#r=new X(this.#o),this.#a=new lt(this.#r,this.#i,s.isLive??!0),this.#e=new ct(this.#o,this.#r,this.#a,this.#i),this.#n=new V(this.#e,i,mt(this.#t,s.isLive)?this.#t:void 0),this.#s=new J(this.#e,this.#a,this.#n,this.#i,s),this.#s.emit=this.emit.bind(this),this.#l=!1,this.#c=!1,this.#s.options.isLive&&setInterval(this.broadcastStateChange.bind(this),100),this.#t.on("APP_StatApi",e=>{let t=e.parsed;t&&this.#n.updatePlayerStats(t.players)}).on("AbilityChangeNotify",e=>{}).on("ActiveAbilityNotify",e=>{}).on("AddonSkillFeatureChangeNotify",e=>{}).on("BlockSkillStateNotify",e=>{}).on("CounterAttackNotify",e=>{let t=e.parsed;if(!t)return;let o=this.#e.entities.get(t.sourceId);o&&this.#s.onCounterAttack(o,e.time)}).on("DeathNotify",e=>{let t=e.parsed;if(!t)return;let o=this.#e.entities.get(t.targetId);o&&this.#s.onDeath(o,e.time)}).on("EquipChangeNotify",e=>{let t=e.parsed;if(!t)return;let o=this.#e.entities.get(t.objectId);if(!o||o.entityType!==1)return;o.itemSet=this.#e.getPlayerSetOptions(t.equipItemDataList);let c=[];t.equipItemDataList.forEach(l=>{l.id!==void 0&&l.slot!==void 0&&c.push({id:l.id,slot:l.slot})}),o.items.equipList=c}).on("EquipLifeToolChangeNotify",e=>{let t=e.parsed;if(!t)return;let o=this.#e.entities.get(t.objectId);if(!o||o.entityType!==1)return;let c=[];t.equipLifeToolDataList.forEach(l=>{l.id!==void 0&&l.slot!==void 0&&c.push({id:l.id,slot:l.slot})}),o.items.lifeToolList=c}).on("IdentityStanceChangeNotify",e=>{let t=e.parsed;if(!t)return;let o=this.#e.entities.get(t.objectId);o&&o.entityType===1&&(o.stance=t.stance)}).on("IdentityGaugeChangeNotify",e=>{}).on("InitAbility",e=>{}).on("InitEnv",e=>{this.#e.processInitEnv(e),this.#s.onInitEnv(e,e.time)}).on("InitLocal",e=>{}).on("InitPC",e=>{let t=this.#e.processInitPC(e);if(t&&e.parsed){let o=this.#i.getStatPairMap(e.parsed.statPair);this.#s.updateOrCreateEntity(t,{id:t.entityId.toString(16),name:t.name,classId:t.class,isPlayer:!0,gearScore:t.gearLevel,currentHp:Number(o.get(1))||0,maxHp:Number(o.get(27))||0},e.time)}}).on("InitItem",e=>{let t=e.parsed;if(t){if([1,20].includes(t.storageType)){this.#e.localPlayer.itemSet=this.#e.getPlayerSetOptions(t.itemDataList);let o=[];t.itemDataList.forEach(c=>{c.id!==void 0&&c.slot!==void 0&&o.push({id:c.id,slot:c.slot})}),this.#e.localPlayer.items.equipList=o}else if(t.storageType===21){let o=[];t.itemDataList.forEach(c=>{c.id!==void 0&&c.slot!==void 0&&o.push({id:c.id,slot:c.slot})}),this.#e.localPlayer.items.lifeToolList=o}}}).on("MigrationExecute",e=>{this.#n.zoneSyncStatus=0;let t=e.parsed;t&&(this.#e.localPlayer.characterId===0n&&(this.#e.localPlayer.characterId=t.account_CharacterId1<t.account_CharacterId2?t.account_CharacterId1:t.account_CharacterId2),this.#n.ip=e.parsed.serverAddr.split(":")[0])}).on("NewNpc",e=>{let t=this.#e.processNewNpc(e);if(t&&e.parsed){let o=this.#i.getStatPairMap(e.parsed.npcStruct.statPair);this.#s.updateOrCreateEntity(t,{id:t.entityId.toString(16),name:t.name,npcId:t.typeId,isPlayer:!1,isBoss:t.isBoss,currentHp:Number(o.get(1))||0,maxHp:Number(o.get(27))||0},e.time)}}).on("NewNpcSummon",e=>{let t=this.#e.processNewNpcSummon(e);if(t&&e.parsed){let o=this.#i.getStatPairMap(e.parsed.npcData.statPair);this.#s.updateOrCreateEntity(t,{id:t.entityId.toString(16),name:t.name,npcId:t.typeId,isPlayer:!1,isBoss:t.isBoss,currentHp:Number(o.get(1))||0,maxHp:Number(o.get(27))||0},e.time)}}).on("NewPC",e=>{let t=this.#e.processNewPC(e);if(t&&e.parsed){let o=this.#i.getStatPairMap(e.parsed.pcStruct.statPair);this.#s.updateOrCreateEntity(t,{id:t.entityId.toString(16),name:t.name,classId:t.class,isPlayer:!0,gearScore:t.gearLevel,currentHp:Number(o.get(1))||0,maxHp:Number(o.get(27))||0},e.time)}}).on("NewProjectile",e=>{let t=e.parsed;if(!t)return;let o={entityId:t.projectileInfo.projectileId,entityType:5,name:t.projectileInfo.projectileId.toString(16),ownerId:t.projectileInfo.ownerId,skillEffectId:t.projectileInfo.skillEffect,skillId:t.projectileInfo.skillId,stats:new Map};this.#e.entities.set(o.entityId,o)}).on("NewTrap",e=>{let t=e.parsed;if(!t)return;let o={entityId:t.trapData.objectId,entityType:5,name:t.trapData.objectId.toString(16),ownerId:t.trapData.ownerId,skillEffectId:t.trapData.skillEffect,skillId:t.trapData.skillId,stats:new Map};this.#e.entities.set(o.entityId,o)}).on("ParalyzationStateNotify",e=>{}).on("PartyInfo",e=>{this.#r.partyInfo(e,this.#e.entities,this.#e.localPlayer)}).on("PartyLeaveResult",e=>{let t=e.parsed;t&&this.#r.remove(t.partyInstanceId,t.name)}).on("PartyPassiveStatusEffectAddNotify",e=>{}).on("PartyPassiveStatusEffectRemoveNotify",e=>{}).on("PartyStatusEffectAddNotify",e=>{let t=e.parsed;if(t)for(let o of t.statusEffectDatas){let c=t.playerIdOnRefresh!==0n?t.playerIdOnRefresh:o.sourceId,l=this.#e.getSourceEntity(c);this.#a.RegisterStatusEffect(this.#a.buildStatusEffect(o,t.characterId,l.entityId,0,e.time))}}).on("PartyStatusEffectRemoveNotify",e=>{let t=e.parsed;if(t)for(let o of t.statusEffectIds){let c=this.#a.RemoveStatusEffect(t.characterId,o,0,t.reason,e.time);c&&c.statusEffectId===9701&&this.#n.syncData()}}).on("PartyStatusEffectResultNotify",e=>{let t=e.parsed;t&&this.#r.add(t.raidInstanceId,t.partyInstanceId,t.characterId)}).on("PassiveStatusEffectAddNotify",e=>{}).on("PassiveStatusEffectRemoveNotify",e=>{}).on("RaidBegin",e=>{let t=e.parsed;t&&(this.#i.statQueryFilter.raid.has(t.raidId)?this.#n.zoneSyncStatus|=16:this.#n.zoneSyncStatus|=8)}).on("ZoneMemberLoadStatusNotify",e=>{let t=e.parsed;t&&(this.#s.setZoneLevel(t.zoneLevel),this.#i.statQueryFilter.zone.has(t.zoneId)&&[0,1,5].includes(t.zoneLevel)?this.#n.zoneSyncStatus|=4:this.#n.zoneSyncStatus|=2)}).on("RaidBossKillNotify",e=>{this.#s.setKillState(1),this.#s.onPhaseTransition(1,e.time)}).on("RaidResult",e=>{e.parsed?.raidResult===1&&this.#s.setKillState(1),this.#s.onPhaseTransition(0,e.time)}).on("RemoveObject",e=>{let t=e.parsed;if(t)for(let o of t.unpublishedObjects)this.#a.RemoveLocalObject(o.objectId,e.time)}).on("SkillCastNotify",e=>{let t=e.parsed;if(!t)return;let o=this.#e.getSourceEntity(t.caster);o=this.#e.guessIsPlayer(o,t.skillId),this.#s.onStartSkill(o,t.skillId,e.time)}).on("SkillDamageAbnormalMoveNotify",e=>{let t=e.parsed;if(!t)return;let o=this.#e.getSourceEntity(t.sourceId);t.skillDamageAbnormalMoveEvents.forEach(c=>{let l=this.#e.getOrCreateEntity(c.skillDamageEvent.targetId),y=this.#e.getOrCreateEntity(t.sourceId);l.stats.set(1,c.skillDamageEvent.curHp),l.stats.set(27,c.skillDamageEvent.maxHp),this.#s.onDamage(o,y,l,{skillId:t.skillId,skillEffectId:t.skillEffectId,damage:Number(c.skillDamageEvent.damage),modifier:c.skillDamageEvent.modifier,targetCurHp:Number(c.skillDamageEvent.curHp),targetMaxHp:Number(c.skillDamageEvent.maxHp),damageAttr:c.skillDamageEvent.damageAttr??0,damageType:c.skillDamageEvent.damageType},t.skillDamageAbnormalMoveEvents.length,e.time)})}).on("SkillDamageNotify",e=>{let t=e.parsed;if(!t)return;let o=this.#e.getSourceEntity(t.sourceId);t.skillDamageEvents.forEach(c=>{let l=this.#e.getOrCreateEntity(c.targetId),y=this.#e.getOrCreateEntity(t.sourceId);this.#s.onDamage(o,y,l,{skillId:t.skillId,skillEffectId:t.skillEffectId??0,damage:Number(c.damage),modifier:c.modifier,targetCurHp:Number(c.curHp),targetMaxHp:Number(c.maxHp),damageAttr:c.damageAttr??0,damageType:c.damageType},t.skillDamageEvents.length,e.time)})}).on("SkillStageNotify",e=>{}).on("SkillStartNotify",e=>{let t=e.parsed;if(!t)return;let o=this.#e.getSourceEntity(t.sourceId);if(o=this.#e.guessIsPlayer(o,t.skillId),o.entityType===1){let c=o,l=c.skills.get(t.skillId);if(l||(l={effects:new Set,tripods:new Map},c.skills.set(t.skillId,l)),l.level=t.skillLevel,t.skillOptionData.tripodIndex&&t.skillOptionData.tripodLevel){l.tripods||(l.tripods=new Map);for(let[y,k]of["first","second","third"].entries()){if(t.skillOptionData.tripodIndex[k]===0){for(let b=1;b<=3;b++)l.tripods.delete(3*y+b);continue}let g=3*y+t.skillOptionData.tripodIndex[k],q=t.skillOptionData.tripodLevel[k],w=l.tripods.get(g);if(w&&q===w.level)continue;for(let b=1;b<=3;b++)l.tripods.delete(3*y+b);let _=this.#i.skillFeature.get(t.skillId)?.get(g),C=[];_&&_.entries.forEach(b=>{b.level!==0&&b.level!==q||C.push(b)}),l.tripods.set(g,{level:t.skillOptionData.tripodLevel[k],options:C.sort((b,z)=>z.level-b.level)})}}}this.#s.onStartSkill(o,t.skillId,e.time)}).on("StatusEffectAddNotify",e=>{let t=e.parsed;if(!t)return;let o=this.#e.getSourceEntity(t.statusEffectData.sourceId);this.#a.RegisterStatusEffect(this.#a.buildStatusEffect(t.statusEffectData,t.objectId,o.entityId,1,e.time))}).on("StatusEffectDurationNotify",e=>{let t=e.parsed;t&&this.#a.UpdateDuration(t.effectInstanceId,t.targetId,t.expirationTick,1)}).on("StatusEffectRemoveNotify",e=>{let t=e.parsed;if(t)for(let o of t.statusEffectIds){let c=this.#a.RemoveStatusEffect(t.objectId,o,1,t.reason,e.time);c&&c.statusEffectId===9701&&this.#n.syncData()}}).on("StatusEffectSyncDataNotify",e=>{let t=e.parsed;t&&this.#a.SyncStatusEffect(t.effectInstanceId,t.characterId,t.objectId,t.value,this.#e.localPlayer.characterId)}).on("TriggerBossBattleStatus",e=>{this.#s.onPhaseTransition(2,e.time)}).on("TriggerFinishNotify",e=>{}).on("TriggerStartNotify",e=>{let t=e.parsed;if(t)switch(t.triggerSignalType){case 57:case 59:case 61:case 63:case 74:case 76:this.#s.setKillState(1);break;case 58:case 60:case 62:case 64:case 75:case 77:this.#s.setKillState(0);break;case 27:case 10:case 11:this.#n.syncData()}}).on("TroopMemberUpdateMinNotify",e=>{}).on("ZoneObjectUnpublishNotify",e=>{let t=e.parsed;t&&this.#a.RemoveLocalObject(t.objectId,e.time)}).on("ZoneStatusEffectAddNotify",e=>{}).on("TroopMemberUpdateMinNotify",e=>{let t=e.parsed;if(t&&t.statusEffectDatas.length>0)for(let o of t.statusEffectDatas){let c=this.#o.getEntityId(t.characterId),l=o.value?o.value.readUInt32LE():0,y=o.value?o.value.readUInt32LE(8):0,k=l<y?l:y;this.#a.SyncStatusEffect(o.effectInstanceId,t.characterId,c,k,this.#e.localPlayer.characterId)}}).on("ZoneStatusEffectRemoveNotify",e=>{}),this.#a.on("shieldApplied",e=>{let t=e.targetId;if(e.type===0&&(t=this.#o.getEntityId(e.targetId)??t),t===void 0)return;let o=this.#e.getSourceEntity(e.sourceId),c=this.#e.getOrCreateEntity(t);this.#s.onShieldApplied(c,o,e.statusEffectId,e.value)}).on("shieldChanged",(e,t,o)=>{let c=e.targetId;if(e.type===0&&(c=this.#o.getEntityId(e.targetId)??c),c===void 0)return;let l=this.#e.getSourceEntity(e.sourceId),y=this.#e.getOrCreateEntity(c);this.#s.onShieldUsed(y,l,e.statusEffectId,t-o)})}broadcastStateChange(){this.emit("state-change",this.#s.getBroadcast())}reset(){this.#s.resetState(+new Date)}cancelReset(){this.#s.cancelReset()}updateOptions(a){this.#s.updateOptions(a)}onConnect(a){this.#n.ip||(this.#n.ip=a.split(":")[0],mt(this.#t,this.#s.options.isLive)&&this.#t.appendLog(new Y({account_CharacterId1:0n,serverAddr:a,account_CharacterId2:0n},11,ft)))}get encounters(){return this.#s.splitEncounter(new Date),this.#s.encounters}};function mt(A,a){return A instanceof ut||A.appendLog&&a}export{ht as Parser};
